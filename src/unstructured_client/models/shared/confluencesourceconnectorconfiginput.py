"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from pydantic import model_serializer
from typing import Optional
from typing_extensions import NotRequired, TypedDict
from unstructured_client.types import (
    BaseModel,
    Nullable,
    OptionalNullable,
    UNSET,
    UNSET_SENTINEL,
)


class ConfluenceSourceConnectorConfigInputTypedDict(TypedDict):
    url: str
    username: str
    cloud: NotRequired[bool]
    max_num_of_docs_from_each_space: NotRequired[int]
    max_num_of_spaces: NotRequired[int]
    password: NotRequired[Nullable[str]]
    spaces: NotRequired[Nullable[str]]
    token: NotRequired[Nullable[str]]


class ConfluenceSourceConnectorConfigInput(BaseModel):
    url: str

    username: str

    cloud: Optional[bool] = False

    max_num_of_docs_from_each_space: Optional[int] = 150

    max_num_of_spaces: Optional[int] = 500

    password: OptionalNullable[str] = UNSET

    spaces: OptionalNullable[str] = UNSET

    token: OptionalNullable[str] = UNSET

    @model_serializer(mode="wrap")
    def serialize_model(self, handler):
        optional_fields = [
            "cloud",
            "max_num_of_docs_from_each_space",
            "max_num_of_spaces",
            "password",
            "spaces",
            "token",
        ]
        nullable_fields = ["password", "spaces", "token"]
        null_default_fields = []

        serialized = handler(self)

        m = {}

        for n, f in self.model_fields.items():
            k = f.alias or n
            val = serialized.get(k)
            serialized.pop(k, None)

            optional_nullable = k in optional_fields and k in nullable_fields
            is_set = (
                self.__pydantic_fields_set__.intersection({n})
                or k in null_default_fields
            )  # pylint: disable=no-member

            if val is not None and val != UNSET_SENTINEL:
                m[k] = val
            elif val != UNSET_SENTINEL and (
                not k in optional_fields or (optional_nullable and is_set)
            ):
                m[k] = val

        return m
